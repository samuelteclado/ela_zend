<?php

/**
 * DaoEmpresa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $razao_social
 * @property string $cnpj
 * @property string $nome_fantasia
 * @property integer $status
 * @property Doctrine_Collection $Auditoria
 * @property Doctrine_Collection $Cliente
 * @property Doctrine_Collection $ContaBancaria
 * @property Doctrine_Collection $Endereco
 * @property Doctrine_Collection $Fornecedor
 * @property Doctrine_Collection $FornecedorCategoria
 * @property Doctrine_Collection $Lancamento
 * @property Doctrine_Collection $Movimento
 * @property Doctrine_Collection $PagamentoTipo
 * @property Doctrine_Collection $PlanoDeContas
 * @property Doctrine_Collection $Procedimento
 * @property Doctrine_Collection $ProcedimentoTipo
 * @property Doctrine_Collection $Produto
 * @property Doctrine_Collection $ProdutoCategoria
 * @property Doctrine_Collection $RegistroPonto
 * @property Doctrine_Collection $Usuario
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class DaoEmpresa extends DaoGeneric
{
    public function setTableDefinition()
    {
        $this->setTableName('empresa');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('razao_social', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('cnpj', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nome_fantasia', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Auditoria', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Cliente', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('ContaBancaria', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Endereco', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Fornecedor', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('FornecedorCategoria', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Lancamento', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Movimento', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('PagamentoTipo', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('PlanoDeContas', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Procedimento', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('ProcedimentoTipo', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Produto', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('ProdutoCategoria', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('RegistroPonto', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));

        $this->hasMany('Usuario', array(
             'local' => 'id',
             'foreign' => 'empresa_id'));
    }
}