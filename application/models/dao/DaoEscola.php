<?php

/**
 * DaoEscola
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $razao_social
 * @property string $nome_fantasia
 * @property string $cnpj
 * @property string $representante_legal
 * @property integer $status
 * @property string $slogan
 * @property integer $plano_id
 * @property Plano $Plano
 * @property Doctrine_Collection $Aluno
 * @property Doctrine_Collection $AlunoDesconto
 * @property Doctrine_Collection $AlunoNota
 * @property Doctrine_Collection $AlunoPresenca
 * @property Doctrine_Collection $Auditoria
 * @property Doctrine_Collection $Boleto
 * @property Doctrine_Collection $ContaBancaria
 * @property Doctrine_Collection $Curso
 * @property Doctrine_Collection $Disciplina
 * @property Doctrine_Collection $Emprestimo
 * @property Doctrine_Collection $EscolaConfiguracao
 * @property Doctrine_Collection $Fornecedor
 * @property Doctrine_Collection $FornecedorCategoria
 * @property Doctrine_Collection $FornecedorContato
 * @property Doctrine_Collection $Historico
 * @property Doctrine_Collection $Lancamento
 * @property Doctrine_Collection $Livro
 * @property Doctrine_Collection $LivroCategoria
 * @property Doctrine_Collection $LivroGrauRelevancia
 * @property Doctrine_Collection $PlanoDeContas
 * @property Doctrine_Collection $Produto
 * @property Doctrine_Collection $ProdutoAluno
 * @property Doctrine_Collection $ProdutoCurso
 * @property Doctrine_Collection $Professor
 * @property Doctrine_Collection $Turma
 * @property Doctrine_Collection $Unidade
 * @property Doctrine_Collection $Usuario
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class DaoEscola extends DaoGeneric
{
    public function setTableDefinition()
    {
        $this->setTableName('escola');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('razao_social', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nome_fantasia', 'string', 90, array(
             'type' => 'string',
             'length' => 90,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('cnpj', 'string', 14, array(
             'type' => 'string',
             'length' => 14,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('representante_legal', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('slogan', 'string', 120, array(
             'type' => 'string',
             'length' => 120,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('plano_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Plano', array(
             'local' => 'plano_id',
             'foreign' => 'id'));

        $this->hasMany('Aluno', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('AlunoDesconto', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('AlunoNota', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('AlunoPresenca', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Auditoria', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Boleto', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('ContaBancaria', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Curso', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Disciplina', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Emprestimo', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('EscolaConfiguracao', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Fornecedor', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('FornecedorCategoria', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('FornecedorContato', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Historico', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Lancamento', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Livro', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('LivroCategoria', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('LivroGrauRelevancia', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('PlanoDeContas', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Produto', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('ProdutoAluno', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('ProdutoCurso', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Professor', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Turma', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Unidade', array(
             'local' => 'id',
             'foreign' => 'escola_id'));

        $this->hasMany('Usuario', array(
             'local' => 'id',
             'foreign' => 'escola_id'));
    }
}