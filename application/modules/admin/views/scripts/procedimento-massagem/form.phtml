

<script type="text/javascript">

    $(document).ready(function() {
        //Quando carregar a pagina
        $(".dados").hide(); //esta primeira linha servirá para esconder as divs do conteúdo
        //$("#cultos li a:first").addClass("active").show(); //Ativar primeira aba
        //$(".horario:first").show('slow'); //abre a pagina suavemente
        var activeaba = '#procedimento_dados';
        $('#procedimento_dados').fadeIn('slow');
        //On Click Event
        $("#dados ul li a").click(function() {// quando clicar no link do menu irá executar a seguinte função:
            $("#dados ul li").removeClass("active"); //remove a class no link clicado para que não fica marcado
            $(this).parent().addClass("active"); //adiciona a classe no link clicado para que o usuario saiba em qual link ele esta
            $(".dados").hide(); //esconder as divs do conteúdo
            activeaba = $(this).attr("href"); //Encontrar o valor do atributo rel para identificar a aba que esta ativa + conteúdo
            $(activeaba).fadeIn('slow'); //efeito de fade in com o conteúdo ativo
            return false; // o returno falso evita que ao clicar no link a página role para o topo.
        });
    });


    function selectedOption(id) {
        var optionSelected = <?php echo (isset($this->procedimento)) ? $this->procedimento->cliente_id : '0' ?>;

        if (optionSelected == id)
            return 'selected';

        return '';
    }

    function removeImagemButton(id) {
        $('#remove').attr('value', id);
        $('#form_procedimento').submit();
    }

    $(function() {
        $('#procedimento').change(function() {
            var procedimento_tipo = "";
            $("#procedimento option:selected").each(function() {
                procedimento_tipo = $(this).val();

                $.getJSON("<?php echo $this->baseUrl() ?>/ajax/procedimento-tipo/procedimento/", {procedimento: procedimento_tipo}, function(prcedimentoTipo) {
                    var prcedimentoTipo = jQuery.parseJSON(prcedimentoTipo);
                    $('#valor').val(prcedimentoTipo.valor);
                })
            });
        })
            //.trigger('change');



        $(".popup_cliente").colorbox({
            iframe: true,
            width: "80%",
            height: "80%",
            fixed: true,
            opacity: 0.8,
            onClosed: function() {
                $('#cliente').html('<option value="0">Carregando aguarde ...</option>');
                $('#cliente').attr("disabled", true);
                $.getJSON("<?php echo $this->baseUrl() ?>/ajax/cliente/list", {ajax: 'true'}, function(list) {
                    var list = jQuery.parseJSON(list)
                    //console.log(list);
                    var clientes = '';
                    $('#cliente').html('');

                    $('#cliente').append('<option value="0">[ Selecione o Cliente ]</option>');
                    $.each(list, function(key, item) {
                        clientes += '<option ' + selectedOption(item.id) + ' value="' + item.id + '">' + item.nome + '</option>';
                    });
                    $('#cliente').append(clientes);
                    $('#cliente').attr("disabled", false);
                    $('#cliente').trigger("liszt:updated");

                })
            }
        });
    });
</script>

<?php echo $this->flashMessenger(); ?>

<form id="form_procedimento" method="POST" action="" enctype="multipart/form-data">
    <fieldset>
        <div colspan="2">
            <div id="dados">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#procedimento_dados">Dados do Procedimento</a></li>
                    <li><a href="#procedimento_detalhes">Ficha Anamnese</a></li>
                </ul>
            </div>
        </div>
        <?php include 'procedimento_dados.phtml'; ?>
        <?php include 'procedimento_detalhes.phtml'; ?>
    </fieldset>


    <hr/>
    <div style="width: 100%;height: 20px">
        <div class="btn-concluir">
            <a class="btn btn-large" href="<?php echo $this->baseUrl(); ?>/admin/procedimento-massagem/">Cancelar</a>
            <button type="submit" class="btn btn-success btn-large">Salvar</button>
        </div>
    </div>
</form>


<script src="<?php echo $this->baseUrl(); ?>/content/upload/jquery/js/load-image.min.js"></script>
<script src="<?php echo $this->baseUrl(); ?>/content/upload/jquery/js/jquery-3.4.1.slim.min.js" integrity="sha256-pasqAKBDmFT4eHoN2ndd6lN370kFiGUFyTiUHWhU7k8=" crossorigin="anonymous"></script>
<script src="<?php echo $this->baseUrl(); ?>/content/upload/jquery/js/html2canvas.min.js"></script>
<script type="text/javascript">
    var result = $('#result');

    document.getElementById('file').onchange = function(e) {
        window.loadImage(
            (e.dataTransfer || e.target).files[0],
            function(img) {
                result.children().replaceWith(img);
            },
            {
                maxWidth: 160,
                maxHeight: 160,
                canvas: true
            }
        );
    };

    $(document).ready(() => {
        var canvasDiv = document.getElementById('canvasDiv');
        var canvas = document.createElement('canvas');
        canvas.setAttribute('id', 'canvas');
        canvasDiv.appendChild(canvas);
        $("#canvas").attr('height', $("#canvasDiv").outerHeight());
        $("#canvas").attr('width', $("#canvasDiv").width());
        if (typeof G_vmlCanvasManager != 'undefined') {
            canvas = G_vmlCanvasManager.initElement(canvas);
        }

        context = canvas.getContext("2d");
        $('#canvas').mousedown(function(e) {
            var offset = $(this).offset()
            var mouseX = e.pageX - this.offsetLeft;
            var mouseY = e.pageY - this.offsetTop;

            paint = true;
            addClick(e.pageX - offset.left, e.pageY - offset.top);
            redraw();
        });

        $('#canvas').mousemove(function(e) {
            if (paint) {
                var offset = $(this).offset()
                //addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
                addClick(e.pageX - offset.left, e.pageY - offset.top, true);
                console.log(e.pageX, offset.left, e.pageY, offset.top);
                redraw();
            }
        });

        $('#canvas').mouseup(function(e) {
            paint = false;
        });

        $('#canvas').mouseleave(function(e) {
            paint = false;
        });

        var clickX = new Array();
        var clickY = new Array();
        var clickDrag = new Array();
        var paint;

        function addClick(x, y, dragging) {
            clickX.push(x);
            clickY.push(y);
            clickDrag.push(dragging);
        }

        $("#reset-btn").click(function() {
            context.clearRect(0, 0, window.innerWidth, window.innerWidth);
            clickX = [];
            clickY = [];
            clickDrag = [];
        });

        $(document).on('click', '#btn-save', function() {
            var mycanvas = document.getElementById('canvas');
            var img = mycanvas.toDataURL("image/png");
            anchor = $("#signature");
            anchor.val(img);
            $("#signatureform").submit();
        });

        var drawing = false;
        var mousePos = {
            x: 0,
            y: 0
        };
        var lastPos = mousePos;

        canvas.addEventListener("touchstart", function(e) {
            mousePos = getTouchPos(canvas, e);
            var touch = e.touches[0];
            var mouseEvent = new MouseEvent("mousedown", {
                clientX: touch.clientX,
                clientY: touch.clientY
            });
            canvas.dispatchEvent(mouseEvent);
        }, false);


        canvas.addEventListener("touchend", function(e) {
            var mouseEvent = new MouseEvent("mouseup", {});
            canvas.dispatchEvent(mouseEvent);
        }, false);


        canvas.addEventListener("touchmove", function(e) {

            var touch = e.touches[0];
            var offset = $('#canvas').offset();
            var mouseEvent = new MouseEvent("mousemove", {
                clientX: touch.clientX,
                clientY: touch.clientY
            });
            canvas.dispatchEvent(mouseEvent);
        }, false);



        // Get the position of a touch relative to the canvas
        function getTouchPos(canvasDiv, touchEvent) {
            var rect = canvasDiv.getBoundingClientRect();
            return {
                x: touchEvent.touches[0].clientX - rect.left,
                y: touchEvent.touches[0].clientY - rect.top
            };
        }


        var elem = document.getElementById("canvas");

        var defaultPrevent = function(e) {
            e.preventDefault();
        }
        elem.addEventListener("touchstart", defaultPrevent);
        elem.addEventListener("touchmove", defaultPrevent);
        elem.addEventListener("touchend", defaultPrevent);


        function redraw() {
            //
            lastPos = mousePos;
            for (var i = 0; i < clickX.length; i++) {
                context.beginPath();
                if (clickDrag[i] && i) {
                    context.moveTo(clickX[i - 1], clickY[i - 1]);
                } else {
                    context.moveTo(clickX[i] - 1, clickY[i]);
                }
                context.lineTo(clickX[i], clickY[i]);
                context.closePath();
                context.stroke();
            }
        }
    })

</script>
